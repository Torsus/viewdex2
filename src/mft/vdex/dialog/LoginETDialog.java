/* @(#) LoginDialog.java 01/28/2003
 *
 * Copyright (c) 2006 Sahlgrenska University Hospital.
 * All Rights Reserved.
 *
 */

/*
 * @author Sune Svensson.
 */

package mft.vdex.dialog;

import info.clearthought.layout.TableLayout;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.*;
import javax.swing.border.TitledBorder;
import mft.vdex.app.AppMainET;
import mft.vdex.app.ViewDex;
import mft.vdex.modules.vg.VgHistoryOptionType;


public class LoginETDialog extends javax.swing.JDialog implements ActionListener, VgHistoryOptionType{
    /** A return status code - returned if Cancel button has been pressed */
    public static final int RET_CANCEL = 0;
    /** A return status code - returned if OK button has been pressed */
    public static final int RET_OK = 1;
    protected java.awt.Frame parent;
    private String[] users = new String[100];
    private String userName;
    protected ViewDex viewDex;
    AppMainET appMainET;
    
    private double f = TableLayout.FILL;
    private double p = TableLayout.PREFERRED;
    
    static String historyOptionStr = "History option";
    static String originalStr = "Original";
    static String editedStr = "Edited";
    static String continueStr = "Go";
    static String eyeTrackingStr = "Eye tracking";
    
    private int historyOption = 0;
    
    private final static String newline = "\n";
    
    // textField
    private JTextField id;
    private JTextField age;
    private JTextField sex;
    private JTextField dominantEye;
   
    JButton continueButton;
    
    public LoginETDialog(){
        initComponents();
    }
    
    public LoginETDialog(ViewDex viewDex,  boolean modal){
        super(viewDex, modal);
        this.viewDex = viewDex;
        initComponents();
        
        // Focus
        id.requestFocusInWindow();
    }
    
    public LoginETDialog(AppMainET appMainET, ViewDex viewDex,
            boolean modal){
        super(viewDex, modal);
        this.viewDex = viewDex;
        this.appMainET = appMainET;
        initComponents();
    }
    
    /** @return the return status of this dialog - one of RET_OK or RET_CANCEL */
    public int getReturnStatus() {
        return returnStatus;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents(){
        int y1, y2, y4, y5, y6, y7;
        
        // Screen size
        Toolkit toolkit = Toolkit.getDefaultToolkit();
        Dimension d = toolkit.getScreenSize();
        float xScale = (float) d.width / 1280;
        float yScale = (float) d.height / 1024;
        int sizeY = Math.round(70 * yScale);
        
        //System.out.println("xScale: " + xScale);
        //System.out.println("yScale: " + yScale);
        
        int x1 = Math.round(35 * xScale);
        int x2 = Math.round(170 * xScale);
        int x3 = Math.round(30 * xScale);
        int x4 = Math.round(40 * xScale);
        int x5 = Math.round(10 * xScale);
        
        y1 = Math.round(10 * yScale);
        y2 = Math.round(25 * yScale);
        int y3 = Math.round(23 * yScale);
        y4 = Math.round(8 * yScale);
        y5 = Math.round(30 * yScale);
        y6 = Math.round(10 * yScale);
        y7 = Math.round(80 * yScale);
        
        //if(xMedicalViewer.getRunMode() == "EXTENDED"){
        if(false){
            y1 = Math.round(8 * yScale);
            y2 = Math.round(22 * yScale);
            y4 = Math.round(4 * yScale);
            y5 = Math.round(28 * yScale);
        }
           
        // Panel
        mainPanel = new javax.swing.JPanel();
        double size[][] = {{x5,x2,80,x5}, {y1,y2,p,y4}};
        mainPanel.setLayout(new TableLayout(size));
        //pwPanel.setBackground(new Color(255,0,0));
        
        // Continue buttton
        continueButton = new JButton(continueStr);
        Font buttonFont = getScaledFont("Dialog", Font.PLAIN, 14);
        continueButton.setFont(buttonFont);
        continueButton.setFocusable(true);
        //continueButton.setFocusPainted(true);
        
        continueButton.addActionListener(new java.awt.event.ActionListener(){
            public void actionPerformed(java.awt.event.ActionEvent evt){
                continueButtonActionPerformed(evt);
            }
        });
        
        // Listener
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });
        
        // Eye tracking
        JPanel eyeTrackingPanel =  createEyeTrackingPanel();
     
        // Add panels
        mainPanel.add(continueButton, "2,1");
        mainPanel.add(eyeTrackingPanel, "1,2,2,2");
        
        // Focus
        id.requestFocusInWindow();
        
        //okButton.setText("OK");
    /*okButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        okButtonActionPerformed(evt);
      }
    });*/
        
        //pwPanel.add(okButton);
        
    /*cancelButton.setText("Cancel");
    cancelButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        cancelButtonActionPerformed(evt);
      }
    });*/
        
        //buttonPanel.add(cancelButton);
        
        getContentPane().add(mainPanel, java.awt.BorderLayout.SOUTH);
        //pack();
    }
    
    /*
     * Create the eye tracking panel
     */
     JPanel createEyeTrackingPanel(){
         // mainPanel
         Font borderFont = getScaledFont("SanSerif", Font.PLAIN, 14);
        
        // border
        TitledBorder tborder = BorderFactory.createTitledBorder(eyeTrackingStr);
        tborder.setTitleFont(borderFont);
        
        double[][] size = {{10,p,f,10}, {10,p,10,p,10,p,10,p,10}};
        JPanel mainPanel = new JPanel();
        //mainPanel.setBackground(new Color(0,0,100));
        //this.setBackground(new Color(110,20,20));
        mainPanel.setLayout(new TableLayout(size));
        mainPanel.setBorder(tborder);
        
        // labels
        //Font lf = getScaledFont("SanSerif", Font.PLAIN, 14);
        Font lf = getScaledFont("Arial", Font.PLAIN, 16);
        Label idLabel = new Label("Id:");
        idLabel.setFont(lf);
        Label ageLabel = new Label("Age");
        ageLabel.setFont(lf);
        Label sexLabel= new Label("Sex:");
        sexLabel.setFont(lf);
        Label dominantEyeLabel = new Label("Dominant eye:");
        dominantEyeLabel.setFont(lf);
        
        // textField
        Font ff = getScaledFont("Arial", Font.PLAIN, 16);
        id = new JTextField();
        id.setFont(ff);
        id.setHorizontalAlignment(JTextField.LEFT);
        id.addActionListener(this);
        
        age = new JTextField();
        age.setFont(ff);
        age.setHorizontalAlignment(JTextField.LEFT);
        age.addActionListener(this);
        
        sex = new JTextField();
        sex.setFont(ff);
        sex.setHorizontalAlignment(JTextField.LEFT);
        sex.addActionListener(this);
        
        dominantEye = new JTextField();
        dominantEye.setFont(ff);
        dominantEye.setHorizontalAlignment(JTextField.LEFT);
        dominantEye.addActionListener(this);
        
        // add
        mainPanel.add(idLabel, "1,1");
        mainPanel.add(id, "2,1");
        mainPanel.add(ageLabel, "1,3");
        mainPanel.add(age, "2,3");
        mainPanel.add(sexLabel, "1,5");
        mainPanel.add(sex, "2,5");
        mainPanel.add(dominantEyeLabel, "1,7");
        mainPanel.add(dominantEye, "2,7");
        
        return mainPanel;
    }
     
     // textInput
     public void actionPerformed(ActionEvent e){
         String text;
         if(e.getSource().equals(id)){
             //appMainET.setID(id.getText());
             age.requestFocusInWindow();
             
         }else
             if(e.getSource().equals(age)){
                 //appMainET.setAge(age.getText());
                 sex.requestFocusInWindow();
             }
             else
                 if(e.getSource().equals(sex)){
                     //appMainET.setSex(sex.getText());
                     dominantEye.requestFocusInWindow();
                 }
                 else
                     if(e.getSource().equals(dominantEye)){
                         //appMainET.setDominantEye(dominantEye.getText());
                         continueButton.requestFocusInWindow();
                 }
     }
     
     /** Closes the dialog */
     public void closeDialog(java.awt.event.WindowEvent evt) {
         doClose(RET_CANCEL);
     }
     
     private void doClose(int retStatus) {
         returnStatus = retStatus;
         setVisible(false);
         dispose();
     }
     
     /** exitButtonActionPerformed
      * Actions then the Exit button  is pressed.
      */
     private void continueButtonActionPerformed(java.awt.event.ActionEvent evt){
         appMainET.setID(id.getText());
         appMainET.setAge(age.getText());
         appMainET.setSex(sex.getText());
         appMainET.setDominantEye(dominantEye.getText());
         
         doClose(RET_CANCEL);
         //System.exit(0);
     }
    
    public void setFocus(){
        id.requestFocusInWindow();
    }
    
    /**
     * @param args the command line arguments
     */
    //public static void main(String args[]) {
        //new CatLoginDialog(new javax.swing.JFrame(), true).show();
    //}
    
    // -------------------------------------------------------------------
    // getScaledFont
    // -------------------------------------------------------------------
    /**
     *  Gets font scaled for screen resolution
     * @param fontName              Logical font name i.e. SansSerif
     * @param fontStyle             Font class style defines
     * @param pointSizeFor1280Mode  How big in 1280 * 1024 resolution
     * @return                      The scaledFont value
     */
    public Font getScaledFont(String fontName, int fontStyle, int pointSizeFor1280Mode){
        Font f = new Font(fontName, fontStyle, pointSizeFor1280Mode);
        Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
        if(d.height == 1024)
            return f;
        else{
            int numerator = pointSizeFor1280Mode * d.height;
            float sizeForCurrentResolution = (float)numerator/1024;
            return f.deriveFont(sizeForCurrentResolution);
        }
    }
    
    // Variables declaration - do not modify
    //private javax.swing.JButton okButton;
    //private javax.swing.JButton cancelButton;
    private javax.swing.JPanel mainPanel;
    // End of variables declaration
    
    private int returnStatus = RET_CANCEL;
}
